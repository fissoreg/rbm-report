%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (/Users/fissore/Documents/uni/internship/dbm-julia/PCA_on_X/l_eigv_5.eps)
%%CreationDate: (2017-03-07T11:44:15+01:00)
%%BoundingBox: -0 -0 28 28
%%HiResBoundingBox: 0 0 28 28
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 28 28
userdict begin
DisplayImage
0 0
28 28
12
28 28
1
1
1
8
7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E
7E7E7D7D7D7D7D7D7D7D7D7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7D7D7C7A787572706F
707275787B7C7D7E7E7E7E7E7E7E7E7E7E7E7D7C79757069615A5352565E6870777B7D7E
7E7E7E7E7E7E7E7E7E7D7B78726A5F52453C3A404D5D6B767C7F807F7E7E7E7E7E7E7E7E
7D7C7872685A4C3F383B485B6F808E9797928C87827F7E7E7E7E7E7E7D7A746A5C4C403C
455B768D9DA9B3B9B7AB9D9087817F7E7E7E7E7E7D7A7267584C4A597699B3C1C3C3C8D0
CFC0AB998B837F7E7E7E7E7F7E7B73685D5C6C8DB3CED9D4C4B8BCCAD1C7B19A8A827E7E
7E7E7E7F7F7C766D687290B6D1DAD4C0A7979DB1C0BDAD9887807E7E7E7E7E7F7F7C7670
7185A6C2CBC5B79F85778197AAAEA594847E7E7E7E7E7E7F7F7B75727990ABBAB8AF9E86
6F646D80939D9B90837E7E7E7E7E7E7E7D7A76767E91A5AEACA3907862595E6B7C8B908B
817D7E7E7E7E7E7E7D7B78777985939B9D937D655550535B6B7C84847E7D7E7E7E7E7E7E
7D7E7A7268666C76776A56494A4F505461717A7C7A7B7E7E7E7E7E7D7E817B694F3C393E
3B312C3B4F5856565C687074767A7D7E7E7E7E7D80847C623B1B10110E10244961645B57
5860676E73797D7E7E7E7E7D81887F633914030105163E657268584F4F56606971787D7E
7E7E7E7D838C876F481E05000C2C597875604B43454E5B6671797D7E7E7E7E7E84919384
5E310F0618426E807257433C404C5B67727A7D7E7E7E7E7E84939F9C835A36293E678A8F
7859443F4754616C757B7D7E7E7E7E7F8391A4B2AD99857F8FA9B5A78664504D54606A72
787C7E7E7E7E7E7F828B9FB6C8D2D6DFEBF0E0BB8E6B5B5A626A72777B7D7E7E7E7E7E7E
808592A7C2DBF0FEFFF0CFA5806A63666D73787B7D7E7E7E7E7E7E7E7F80858F9FB3C6D1
CFBFA68C796F6D7075797B7D7E7E7E7E7E7E7E7E7E7F80848A929BA09F998E847C787778
7A7C7D7E7E7E7E7E7E7E7E7E7E7E7F8083868A8D8C8A86827F7D7D7D7D7E7E7E7E7E7E7E
7E7E7E7E7E7E7E7E7E7E7F7F7F7F7F7F7E7E7E7E7E7E7E7E7E7E7E7E
end
%%PageTrailer
%%Trailer
%%EOF
