%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (/Users/fissore/Documents/uni/internship/dbm-julia/PCA_on_W/l_eigv_3.eps)
%%CreationDate: (2017-03-07T11:45:07+01:00)
%%BoundingBox: -0 -0 28 28
%%HiResBoundingBox: 0 0 28 28
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 28 28
userdict begin
DisplayImage
0 0
28 28
12
28 28
1
1
1
8
5D5F5C5D5C5D5C5D5C5C5E5D5E5C5E5D5D5E5D5E5C5D5D5B5C5A5E5C5D5E5D5C5E5C5C58
5858555253545A5D6061656868645F5C5C5E5D5D5D5D5C5E5F5D5950505452565A5E6568
666A72797E8585786B625D5D5C5D5E5F5F5F565052585B636C737D8797A5AEB3B8B8AE9C
88675F5D5D5E5F5F584F4F54595D666E727C8CA3B9C9CFD7E0DED2C3AD8C655E5C5F5F58
4844403F41444D545D6A7E98B1C6D2DFEEE8DCCDB595735E5C5C553D3B322C262729313B
4857677C93A8BDD2E7ECE9D7B79178615D5738252A201C1B1A1D27354550565A6A809ABA
D5E4E5D9BB8E75615B46281B1B151717171E2F4251544C414A5E7CA1C4DAE2D7B98B725E
5B40261B1B1A1B1A1D273B505B58493E424D658AACC1CEC6AB80705E5A3D2C24262B282A
2C3B4F616965564D4A4A597690A3B2B19C766C5E594135323B444142475869707471655E
554D54687C8B999E9370635C5B4B4043505B5E5D63717D7D7C7569635B5457636F7D8890
8B6E625C5E5747516271777577848B8980736766615D5D6168757D857E6C5E5C5D5B4F5E
778A8E8A8A8D8D887E7168696563605F6975787F7668595E5D5F5E738DA4A99F978F8A82
79706B68646262636E75777A6F62565B5B5E6D7FA0BBC2B2A19387817E79716761616468
717572736D5C535C5D5D7388AED1D6C5AF998783837F7669636364676B6C6B6B6457535A
5D5E778CB8E1E8D5BCA089818382796C6665615E5E6265645C52555B5C5B7B8DBDE9F7E8
D0B496817E7A7168625E5953545C5F5F564E565B5C5D7B8DB9E8FFF9E4CAA88C7D6C625A
5452504C515A5C5B5750595E5E5F798BABDCFCFFEFD7B5957B6559534F4F4C4C51565A5B
56525C5D5C5D71839CC2E4F1E8D3B594746358514C4D4C4B4D51595750565F5E5D5D6375
879DB3C5C4B0946E5045403A393D42444349514A4E595D5D5D5E5D657079848881735632
1B181C1D232A322F2F39424349575C5D5D5D5E5E686C68625746270B00061013161A2022
29303B4B565D5C5C5D5F5E5D6369685E513C221210171F252B2C2E2F353C4B5A5D5D5C5D
5D5E5E5C5E5C5B5A564A3C363535373938373B414C56595C5E5D5D5C
end
%%PageTrailer
%%Trailer
%%EOF
