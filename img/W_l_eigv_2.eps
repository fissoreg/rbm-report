%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (/Users/fissore/Documents/uni/internship/dbm-julia/PCA_on_W/l_eigv_2.eps)
%%CreationDate: (2017-03-07T11:45:01+01:00)
%%BoundingBox: -0 -0 28 28
%%HiResBoundingBox: 0 0 28 28
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 28 28
userdict begin
DisplayImage
0 0
28 28
12
28 28
1
1
1
8
6C6B6B6B6C6B6C6C6C6A6C6B6B696A6B6A6B6D6B6C6C6C6C6C6D6B6C6C6B6B6C6C6B6B67
63625B585855514D4A4E555A5E676A6C6B6A6B6C6C6C6B6C696B645D574E453D39352A21
21242A313A46505B656B6B6C6C6B6A6B6A61584E453C322A241A0B03070D151C29374554
5D686C6C6B6B6969665955514C463D352C1A0700060E19273D4D585E636A6D6C6B6B696B
6B676C7172706C6559493D3A4048526174848D8C84807C6C6B6B6D71767C878F918F867B
6E625A5F67707A8A9FAFB6AE9D9289726C6D737A8291A1A5A39C92877F7873777C838EA2
B6C8D2C6AE998D716C7074828A9DACADA79E948C8884817E7E8692A6BDD1DDD1B59B8C71
6B72768191A3AEACA79D918A8A85827B7B8291A6BDD2DAD1B79986716D71768295A7AEAC
A395878284847E78787C899CB4C9CFC6B0917C6F6B70798398A8AEA79A8C7F7E84837A75
74747E8CA4B6BFB9A68B776B6C6E7A8599A7AA9E9389807E827F7472716F738192A0A9A8
9B826F6B6C6D778698A29F938C85807D7E796D6E706E7079858F93968F7D696A6B6C7281
949A9388817D797A7B746B6D71716F747F8384898679646C6B6C6C76878F877C75727175
77716A6B71716D6F76797B7F7F74646A6C6B686E7C857B706A64646A6F6A65696E696464
6B717579776B61696B6B6468757F756A6259555C65656568665D55585F6971736D615B69
6C6B6265717A756A5E554C50595E60615D534C4E57636C6A645A57696B6B61636E77786F
645D50484B4E515453504D4E576165615B5455696B6A60616B7377756C64564844434A53
585A59555B605F5F5A53586C6B6962626971767A78716A625D5F666A6B6D695F5E5F6063
5C57606C6C6C69686F777F868C9196979A9D999087837A6B67656867605D686B6C6B7074
7C8797A5B3C1CDD3D7D5C7B39F958B7B7473736D67696C6B6C6D6C788E9CB0C6DAEDF8FF
FDF4E0C6AFA3988A827F7C766F6C6C6C6C6B6C708395A8B9CAD2DAE0E1D9C4AFA39A8D80
7F7C7C76706D6C6D6C6C6B6C74848D92969C9DA0A19B91837F7B77787875736C6D6C6B6B
6D6C6C6D6C70787E8285838484817B7472727373716E6D6C6C6B6B6B
end
%%PageTrailer
%%Trailer
%%EOF
